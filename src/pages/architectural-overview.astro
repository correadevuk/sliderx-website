---
import Base from "../layouts/Base.astro";
import CardContainer from "../layouts/shortcodes/CardContainer";
import ArchCard from "../layouts/shortcodes/ArchCard";
import Images from "../layouts/shortcodes/Images";

const title = "Architectural Overview";
const description =
  "Learn about SlideRX's event-driven, decoupled AWS serverless architecture designed for reliability and scalability.";
---

<Base title={title} description={description} header_alt={true}>
  <section
    class="section-md mb-14 rounded-b-[2rem] bg-light md:mb-16 md:rounded-b-[80px]"
  >
    <div class="container">
      <div class="row">
        <div
          class="mx-auto rounded-t-2xl bg-white pb-0 pt-8 text-center md:col-10 md:px-10 md:pt-16"
        >
          <div class="relative z-10 text-center">
            <div
              class="relative w-full rounded-3xl bg-primary px-6 py-8 sm:px-10 sm:py-12"
            >
              <h1
                class="text-h1-sm mb-3 mt-0 text-text-dark md:mb-4 md:text-h1-md lg:text-h1"
              >
                {title}
              </h1>
              <p class="font-secondary text-dark md:text-h5">
                {description}
              </p>
            </div>
          </div>
        </div>
        <div class="mx-auto rounded-b-2xl bg-white md:col-10 md:px-10 md:pb-12">
          <div class="content max-sm:px-0">
            <div class="my-16 md:my-24">
              <h2>System Architecture Summary</h2>
              <p>
                This application implements a fully decoupled, event-driven
                architecture using AWS serverless services to process user
                presentations asynchronously. The system transforms uploaded
                PowerPoint presentations (in PDF format) into AI-generated
                executive summaries through a multi-stage pipeline. This design
                handles variable file sizes, complex AI processing and
                unpredictable execution times, all while maintaining immediate
                user responsiveness.
              </p>
            </div>

            <div class="my-16 md:my-24">
              <h2>Core Technology Stack</h2>
              <CardContainer>
                <ArchCard
                  title="API Layer"
                  content="Amazon API Gateway + AWS Lambda"
                  icon="/icons/Arch_Amazon-API-Gateway_64.svg"
                  iconAlt="Amazon API Gateway"
                />
                <ArchCard
                  title="Authentication"
                  content="AWS Cognito"
                  icon="/icons/Arch_Amazon-Cognito_64.svg"
                  iconAlt="AWS Cognito"
                />
                <ArchCard
                  title="Database"
                  content="Amazon DynamoDB"
                  icon="/icons/Arch_Amazon-DynamoDB_64.svg"
                  iconAlt="Amazon DynamoDB"
                />
                <ArchCard
                  title="Storage"
                  content="Amazon S3 with event notifications"
                  icon="/icons/S3-Select_48.svg"
                  iconAlt="Amazon S3"
                />
                <ArchCard
                  title="Message Queue"
                  content="Amazon SQS (Standard Queue)"
                  icon="/icons/Arch_Amazon-Simple-Queue-Service_64.svg"
                  iconAlt="Amazon SQS"
                />
                <ArchCard
                  title="Processing Orchestration"
                  content="n8n workflows"
                  icon="/icons/n8n.svg"
                  iconAlt="n8n"
                />
                <ArchCard
                  title="AI Processing"
                  content="Generative AI models (external service)"
                  icon="/icons/generativeAI.svg"
                  iconAlt="AI"
                />
                <ArchCard
                  title="PDF Generation"
                  content="External PDF rendering service"
                  icon="/icons/pdf-file.svg"
                  iconAlt="PDF"
                />
                <ArchCard
                  title="UI"
                  content="React"
                  icon="/icons/react.svg"
                  iconAlt="React"
                />
              </CardContainer>
            </div>

            <div class="my-16 md:my-24">
              <h2>Detailed Processing Flow</h2>
              <h3>Phase 1: Project Initialization & File Upload</h3>
              <p>
                Users authenticate via Cognito and create a project. A Lambda
                function saves initial metadata to DynamoDB and generates a
                pre-signed S3 URL for the client to upload the presentation
                directly, bypassing API Gateway's payload limits.
              </p>

              <h3>Phase 2: Asynchronous Document Analysis</h3>
              <p>
                An S3 <code>ObjectCreated</code> event triggers a message to an SQS
                queue. A Lambda consumer polls this queue, retrieves the message,
                and invokes an n8n workflow. This workflow analyzes the presentation
                with a generative AI, generates contextual questions for the user,
                and updates the project status in DynamoDB to <code
                  >NEEDS_REVIEW</code
                >.
              </p>

              <h3>Phase 3: User Interaction & Final Generation</h3>
              <p>
                The user answers the AI-generated questions in the UI. This
                triggers a second n8n workflow that synthesizes all information,
                generates a final 3-slide executive summary via AI, creates a
                presentation-quality PDF, and uploads it to an S3 output folder.
                A final SQS message-lambda sequence updates DynamoDB with the <code
                  >COMPLETED</code
                > status and a pre-signed download URL for the user.
              </p>
            </div>

            <div class="my-16 md:my-24">
              <h2>Key Design Patterns</h2>
              <CardContainer>
                <ArchCard
                  variant="green"
                  cols="two"
                  title="Pre-Signed URLs for Direct S3 Access"
                  content="Eliminates Lambda/API Gateway as bottlenecks for large file transfers."
                />
                <ArchCard
                  variant="green"
                  cols="two"
                  title="Status-Driven State Machine"
                  content="A status field in DynamoDB orchestrates the UI and backend workflows (e.g., PENDING_UPLOAD → ANALYZING → COMPLETED)."
                />
                <ArchCard
                  variant="green"
                  cols="two"
                  title="SQS as Workflow Glue"
                  content="Decouples event producers (S3) from consumers (Lambda), enabling backpressure handling and independent scaling."
                />
                <ArchCard
                  variant="green"
                  cols="two"
                  title="Checkpoint-Based Processing"
                  content="DynamoDB stores intermediate results, allowing the system to resume on failure without reprocessing from the start."
                />
              </CardContainer>
            </div>

            <div class="my-16 md:my-24">
              <h2>Why a Decoupled Architecture?</h2>
              <p>
                This event-driven, decoupled approach solves several key
                production challenges that a monolithic or synchronous system
                would face.
              </p>
              <ul>
                <li>
                  <strong>Variable File Sizes & AI Runtimes:</strong> S3 pre-signed
                  URLs and SQS queues prevent API Gateway (29s) and Lambda (15min)
                  timeouts. The user gets an immediate response.
                </li>
                <li>
                  <strong>Fault Tolerance & Retries:</strong> SQS Dead Letter Queues
                  (DLQs) and checkpointing in DynamoDB allow individual stages to
                  fail and retry without affecting the entire system or losing progress.
                </li>
                <li>
                  <strong>Scalability & Cost-Efficiency:</strong> The serverless
                  components (Lambda, SQS) scale automatically with demand and scale
                  to zero, ensuring we only pay for what we use.
                </li>
                <li>
                  <strong>Throughput Management:</strong> SQS acts as a buffer during
                  traffic spikes, ensuring the processing pipeline is not overwhelmed
                  and requests are handled gracefully.
                </li>
              </ul>
            </div>

            <div class="my-16 md:my-24">
              <h2>Trade-offs vs. Out-of-the-Box Solutions</h2>
              <h3>Why not Supabase/Firebase?</h3>
              <ul>
                <li>
                  <strong>Abstraction layer limits control</strong> Forced to interact
                  through proprietary APIs rather than directly with raw AWS services,
                  restricting fine-grained configuration of timeouts, retry logic,
                  user permissions and resources settings/permissions.
                </li>
                <li>
                  <strong>Higher fixed costs</strong> for always-on infrastructure.
                </li>
                <li>
                  <strong>Cost markup on underlying infrastructure</strong> Third-party
                  platforms provision cloud resources (AWS, Azure, GCP) in their
                  own accounts and add margins on top of the actual cloud provider
                  costs.
                </li>
                <li>
                  <strong>Vendor lock-in</strong> Proprietary APIs and data models
                  make migration costly vs. AWS's open standards.
                </li>
                <li>
                  <strong>Shared multi-tenant security model</strong> Less control
                  over network isolation, encryption boundaries and resource-level
                  permissions compared to direct AWS IAM policies.
                </li>
                <li>
                  <strong>Limited scalability paths</strong> Locked into platform's
                  database offerings. In AWS, we can migrate between database services
                  (RDS, Aurora Serverless, DynamoDB, DocumentDB) as data volume and
                  access patterns evolve, without vendor lock-in or major application
                  rewrites.
                </li>
              </ul>
              <p>
                Our architecture supports future enhancements (batch processing,
                multi-model AI routing, custom workflow orchestration via n8n)
                without platform migrations or vendor constraints.
              </p>
              <p>
                <strong>Complexity cost:</strong> Requires managing multiple AWS
                services, SQS tuning and DynamoDB indexing strategies, an acceptable
                trade-off for production-grade reliability.
              </p>
            </div>

            <div class="my-16 md:my-24">
              <h2>Architecture Diagram</h2>
              <div class="not-prose">
                <Images
                  client:load
                  image="/images/SlideRX-ArchitectureDiagram.png"
                  alt="SlideRX System Architecture Diagram showing event-driven flow"
                />
                <div class="mt-3 text-center">
                  <a
                    href="/images/SlideRX-ArchitectureDiagram.png"
                    target="_blank"
                    rel="noopener"
                    class="btn btn-primary-text-dark">View full size</a
                  >
                </div>
              </div>
            </div>

            <div class="my-16 md:my-24">
              <h2>Team Reflections</h2>
              <CardContainer>
                <!-- Vitor -->
                <div class="flex col-12">
                  <div
                    class="flex h-full flex-col rounded-xl border border-border bg-white p-6 sm:rounded-2xl sm:p-8 w-full"
                  >
                    <p class="font-secondary text-text italic">
                      “For me, this hackathon was more about the experience than
                      the final product. In previous projects, I often found
                      myself jumping in to fix or improve things, but this time
                      I made a conscious effort to focus on helping the team
                      grow sharing my reasoning, explaining decisions and
                      supporting wherever I could rather than taking over. It’s
                      been a great exercise in collaboration and I’m genuinely
                      proud of how we all learned from one another and brought
                      everything together as a team.”
                    </p>
                    <div class="mt-6 flex items-center gap-3">
                      <img
                        src="/images/vitor.jpg"
                        alt="Vitor Correa"
                        class="h-12 w-12 rounded-full object-cover border border-border"
                      />
                      <div class="font-medium text-text-dark">Vitor Correa</div>
                    </div>
                  </div>
                </div>

                <!-- Phil -->
                <div class="flex col-12">
                  <div
                    class="flex h-full flex-col rounded-xl border border-border bg-white p-6 sm:rounded-2xl sm:p-8 w-full"
                  >
                    <p class="font-secondary text-text italic">
                      “I want to to be honest here: originally I was thinkin
                      like ‘how hard can frontend be’. Turned out, pretty damn
                      hard when you try to learn React along the way while also
                      building under a deadline. What really mattered to me
                      though was not the tech stack. What made the huge
                      difference for is that both Vitor and Talab did not just
                      build their parts and disappeared. We talked through
                      ideas, decisions, debugged together (remember amplify?)
                      and figured out how to make this thing work, one way or
                      the other. I am not so experienced in hackathons but for
                      me that was really special. The app works, we shipped
                      something real. And I myself learned more about tech AND
                      how to cooperate in software projects in 18 days than I
                      would've in 6 months of tutorials. If that is not a win, I
                      don't know what is.”
                    </p>
                    <div class="mt-6 flex items-center gap-3">
                      <img
                        src="/images/phil.jpg"
                        alt="Philipp Kowalski"
                        class="h-12 w-12 rounded-full object-cover border border-border"
                      />
                      <div class="font-medium text-text-dark">
                        Philipp Kowalski
                      </div>
                    </div>
                  </div>
                </div>

                <!-- Talab -->
                <div class="flex col-12">
                  <div
                    class="flex h-full flex-col rounded-xl border border-border bg-white p-6 sm:rounded-2xl sm:p-8 w-full"
                  >
                    <p class="font-secondary text-text italic">
                      “This was my first hackathon and first time being part of
                      any community - I usually learn and work alone. In 18 days
                      I went from watching N8N tutorials to actually building
                      real workflows and getting hands-on with AWS. But the real
                      value wasn't just the technical skills - it was working
                      with Vitor and Phil who didn't just build their parts and
                      disappear, but explained things, debugged together, and
                      made me feel like I actually belong. Learned more in these
                      18 days than months of solo tutorials could ever teach
                      me.”
                    </p>
                    <div class="mt-6 flex items-center gap-3">
                      <img
                        src="/images/talab.jpg"
                        alt="Talab Elmharek"
                        class="h-12 w-12 rounded-full object-cover border border-border"
                      />
                      <div class="font-medium text-text-dark">
                        Talab Elmharek
                      </div>
                    </div>
                  </div>
                </div>
              </CardContainer>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>
</Base>
